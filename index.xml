<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MyBatis 分页插件 PageHelper</title>
    <link>https://pagehelper.github.io/</link>
    <description>Recent content on MyBatis 分页插件 PageHelper</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 03 Jun 2017 17:45:41 +0800</lastBuildDate>
    
	<atom:link href="https://pagehelper.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何使用分页插件</title>
      <link>https://pagehelper.github.io/docs/howtouse/</link>
      <pubDate>Sat, 03 Jun 2017 17:45:41 +0800</pubDate>
      
      <guid>https://pagehelper.github.io/docs/howtouse/</guid>
      <description>使用方法 1. 引入分页插件 引入分页插件有下面2种方式，推荐使用 Maven 方式。
1). 引入 Jar 包 你可以从下面的地址中下载最新版本的 jar 包
 https://oss.sonatype.org/content/repositories/releases/com/github/pagehelper/pagehelper/
 http://repo1.maven.org/maven2/com/github/pagehelper/pagehelper/
  由于使用了sql 解析工具，你还需要下载 jsqlparser.jar：
 http://repo1.maven.org/maven2/com/github/jsqlparser/jsqlparser/0.9.5/  2). 使用 Maven 在 pom.xml 中添加如下依赖：
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.github.pagehelper&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;pagehelper&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;最新版本&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;  最新版本号可以从首页查看。
2. 配置拦截器插件 特别注意，新版拦截器是 com.github.pagehelper.PageInterceptor。 com.github.pagehelper.PageHelper 现在是一个特殊的 dialect 实现类，是分页插件的默认实现类，提供了和以前相同的用法。
1. 在 MyBatis 配置 xml 中配置拦截器插件 &amp;lt;!-- plugins在配置文件中的位置必须符合要求，否则会报错，顺序如下: properties?, settings?, typeAliases?, typeHandlers?, objectFactory?,objectWrapperFactory?, plugins?, environments?, databaseIdProvider?, mappers? --&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;!-- com.github.pagehelper为PageHelper类所在包名 --&amp;gt; &amp;lt;plugin interceptor=&amp;quot;com.</description>
    </item>
    
    <item>
      <title>QueryInterceptor 规范</title>
      <link>https://pagehelper.github.io/docs/interceptor/</link>
      <pubDate>Sat, 03 Jun 2017 17:46:37 +0800</pubDate>
      
      <guid>https://pagehelper.github.io/docs/interceptor/</guid>
      <description>Executor 拦截器高级教程 - QueryInterceptor 规范 这篇文档涉及下面几个方面 1. Executor query 方法介绍 2. 拦截器配置和调用顺序 3. 拦截 query 方法的技巧 4. 拦截 query 方法的规范 5. 如何配置不同的 Executor 插件
1. Executor query 方法介绍 在 MyBatis 的拦截器的文档部分，我们知道 Executor 中的 query 方法可以被拦截，如果你真正写过这个方法的拦截器， 你可能会知道在 Executor 中的 query 方法有两个：
&amp;lt;E&amp;gt; List&amp;lt;E&amp;gt; query( MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, CacheKey cacheKey, BoundSql boundSql) throws SQLException; &amp;lt;E&amp;gt; List&amp;lt;E&amp;gt; query( MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler) throws SQLException;  这两个方法的区别是第一个方法多两个参数 CacheKey 和 BoundSql，在多数情况下，我们用拦截器的目的就是针对 SQL 做处理，如果能够拦截第一个方法，可以直接得到 BoundSql 对象，就会很容易的得到执行的 SQL，也可以对 SQL 做处理。</description>
    </item>
    
    <item>
      <title>ChangeLog</title>
      <link>https://pagehelper.github.io/docs/changelog_en/</link>
      <pubDate>Sat, 03 Jun 2017 17:49:01 +0800</pubDate>
      
      <guid>https://pagehelper.github.io/docs/changelog_en/</guid>
      <description>5.0.3 -2017-06-20  Solve the supportMethodsArguments parameter problem. It is recommended to upgrade to the latest version.  5.0.2 - 2017-05-30  Page&amp;lt;E&amp;gt; implements Closeable interface, in JDK7+ which can use the in try () call, it will automatically call PageHelper.clearPage ();#58 fixed: DB2 paging must be specified sub-query alias, or an exception will occur #52 fixed page.size() == 0 then pageInfo.isIsLastPage() is false #50  5.0.1 - 2017-04-23  Add the new parameter countColumn used to configure the automatic count column, the default value 0, that is, `count(0).</description>
    </item>
    
    <item>
      <title>5.0.3 版本发布</title>
      <link>https://pagehelper.github.io/blog/5-0-3/</link>
      <pubDate>Mon, 17 Jul 2017 17:35:04 +0800</pubDate>
      
      <guid>https://pagehelper.github.io/blog/5-0-3/</guid>
      <description> 5.0.3 -2017-06-20  解决supportMethodsArguments参数不起作用的问题，由于之前默认为false，不起作用后效果为true，建议升级到最新版本。  </description>
    </item>
    
    <item>
      <title>更新历史日志</title>
      <link>https://pagehelper.github.io/docs/changelog/</link>
      <pubDate>Sat, 03 Jun 2017 17:47:43 +0800</pubDate>
      
      <guid>https://pagehelper.github.io/docs/changelog/</guid>
      <description>更新日志 4.2.1 - 2016-12-11  解决SimpleCache类遗留问题导致的错误 #143 fix by dhhua  4.2.0 - 2016-12-09  使用新的方式进行分页，4.2版本是从5.0版本分离出来的一个特殊版本，这个版本兼容4.x的所有功能，5.0版本时为了简化分页逻辑，会去掉部分功能，所以4.2是4.x的最后一个版本。 支持 MyBatis 3.1.0+ 版本 增加对 Derby 数据库的支持 对除 informix 外的全部数据库进行测试，全部通过 PageHelper增加手动清除方法clearPage() 解决 SqlServer 多个with(nolock)时出错的问题 对CountMappedStatement 进行缓存，配置方式见BaseSqlUtil 319行 由于SqlServer的sql处理特殊，因此增加了两个SQL缓存，具体配置参考SqlServerDialect类 添加 sqlserver 别名进行排序功能，在解析sql时，会自动将使用的别名转换成列名 by panmingzhi 新增sqlCacheClass参数，该参数可选，可以设置sql缓存实现类，默认为SimpleCache，当项目包含guava时，使用GuavaCache，也可以通过参数sqlCacheClass指定自己的实现类，有关详情看com.github.pagehelper.cache包。 解决#135，增加/keep orderby/注解，SQL中包含该注释时，count查询时不会移出order by sqlserver没有orderby时，使用order by rand() #82 #118  4.1.6 - 2016-06-05  通过间接处理字符串解决SqlServer中不支持with(nolock)的问题#86，详情可以看SqlServerParser和SqlServer2012Dialect  4.1.5 - 2016-05-29  更新PageProviderSqlSource，支持3.4.0版本的Provider注解方式的分页#102 解决SqlUtil未初始化PARAMS属性导致的错误  4.1.4 - 2016-05-12  解决closeConn未设置时，默认值被覆盖变成false的问题#97 closeConn不只对动态数据源有效，当没有设置dialect属性自动获取数据库类型的时候同样有效 解决关闭tomcat的时候提示线程安全问题#98，这个问题不会导致内存溢出，已经增加处理  4.</description>
    </item>
    
    <item>
      <title>5.0.2 版本发布</title>
      <link>https://pagehelper.github.io/blog/5-0-2/</link>
      <pubDate>Sat, 03 Jun 2017 17:35:04 +0800</pubDate>
      
      <guid>https://pagehelper.github.io/blog/5-0-2/</guid>
      <description> 5.0.2 - 2017-05-30  Page&amp;lt;E&amp;gt; 继承 Closeable 接口，在 JDK7+中可以使用 try()方式调用，自动调用PageHelper.clearPage();#58。 解决：DB2分页时必须要指定子查询的别名,不然会发生异常 #52 解决：分页取数据时，如果数据一条都没有返回, pageInfo.isIsLastPage(); 返回false #50  </description>
    </item>
    
    <item>
      <title>5.0.1 版本发布</title>
      <link>https://pagehelper.github.io/blog/5-0-1/</link>
      <pubDate>Sat, 03 Jun 2017 17:34:23 +0800</pubDate>
      
      <guid>https://pagehelper.github.io/blog/5-0-1/</guid>
      <description> 5.0.1 - 2017-04-23  增加新的参数 countColumn 用于配置自动 count 查询时的查询列，默认值0，也就是 count(0) Page 对象也新增了 countColumn 参数，可以针对具体查询进行配置 针对文档显示问题进行修改，by liumian* PR #30 解决 sqlserver2012 分页错误的问题 42  </description>
    </item>
    
    <item>
      <title>5.0.0 版本发布</title>
      <link>https://pagehelper.github.io/blog/5-0-0/</link>
      <pubDate>Sat, 03 Jun 2017 17:31:56 +0800</pubDate>
      
      <guid>https://pagehelper.github.io/blog/5-0-0/</guid>
      <description> 5.0.0 - 2017-01-02  使用 QueryInterceptor 规范 处理分页逻辑 新的分页插件拦截器为 com.github.pagehelper.PageInterceptor 新的 PageHelper 是一个特殊的 Dialect 实现类，以更友好的方式实现了以前的功能 新的分页插件仅有 dialect 一个参数，默认的 dialect 实现类为 PageHelper PageHelper 仍然支持以前提供的参数，在最新的使用文档中已经全部更新 PageHelper 的 helperDialect 参数和以前的 dialect 功能一样，具体可以看文档的参数说明 增加了基于纯 RowBounds 和 PageRowBounds 的分页实现，在 com.github.pagehelper.dialect.rowbounds 包中，这是用于作为 dialect 参数示例的实现，后面会补充更详细的文档 去掉了不适合出现在分页插件中的 orderby 功能，以后会提供单独的排序插件 去掉了 PageHelper 中不常用的方法 新的文档，更新历来更新日志中提到的重要内容，提供英文版本文档 解决 bug #149 将 Db2RowDialect 改为 Db2RowBoundsDialect 所有分页插件抛出的异常改为 PageException  </description>
    </item>
    
  </channel>
</rss>